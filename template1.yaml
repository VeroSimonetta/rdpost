AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Plantilla CloudFormation para crear funciones función Lambda y un API Gateway para diferentes entornos.
  Incluye recursos de API Gateway que invoca la función Lambda.

Parameters:
  Environment:
    Type: String
    Description: Entorno para la función Lambda (pre o pro)
    AllowedValues:
      - pre
      - pro
    Default: pre

  Runtime:
    Type: String
    Description: Runtime de la función Lambda.
    Default: python3.12

  MemorySize:
    Type: Number
    Description: Cantidad de memoria asignada a la función Lambda en MB.
    Default: 256

  Timeout:
    Type: Number
    Description: Tiempo máximo de ejecución de la función Lambda en segundos.
    Default: 60

  AppName:
    Type: String
    Default: RDPost
    Description: Name of application.

  RepositoryId:
    Description: Id del repositorio de github del proyecto de backend
    Type: String  

  GithubConnectionArn:
    Description: Arn de la conexion desde la cuenta AWS al repositorio github (es necesario que esté previamente creada en la cuenta)
    Type: String  
  
Conditions:
  IsProd: !Equals [!Ref Environment, "pro"]

  CreateDevResources: !Equals [ !Ref Environment, "pre"]

Mappings:
  EnvMap:
    pre:
      branch: pre
      detectChanges: true
    pro:
      branch: master
      detectChanges: true  

Resources:

# --- DEVOPS: PIPELINES Y CODEBUILD  ---
PipelineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: CodePipelineServiceRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
                - codebuild.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AWSCodePipeline_FullAccess
        - arn:aws:iam::aws:policy/AWSCodeBuildDeveloperAccess
        - arn:aws:iam::aws:policy/AWSCloudFormationFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess

  # Proyecto de compilación para la Lambda en CodeBuild
BackendBuildProject:
  Type: AWS::CodeBuild::Project
  Properties:
    Name: !Sub ${AppName}-${Environment}-build
    Description: Proyecto de compilación para la función Lambda de ${AppName}
    Source:
      Type: CODEPIPELINE
      BuildSpec: buildspec.yml
    Artifacts:
      Type: CODEPIPELINE
    Environment:
      ComputeType: BUILD_GENERAL1_SMALL
      Image: aws/codebuild/standard:7.0
      Type: LINUX_CONTAINER
      EnvironmentVariables:
        - Name: S3_BUCKET
          Value: !Ref ArtifactsBucket
    ServiceRole: !GetAtt PipelineRole.Arn
    Tags:
      - Key: Environment
        Value: !Ref Environment

  
   # Pipeline para el proyecto de backend
RDPostLambdaFunctionCodePipeline:
  Type: AWS::CodePipeline::Pipeline
  Properties:
    Name: !Join ["-", [!Ref AppName,"backend", !Ref Environment]]
    PipelineType: V2
    RoleArn: !GetAtt PipelineRole.Arn
    ArtifactStore:
      Type: S3
      Location: !Ref ArtifactsBucket
    Stages:
      - Name: Source
        Actions:
          - Name: Source
            ActionTypeId:
              Category: Source
              Owner: AWS
              Provider: CodeStarSourceConnection
              Version: "1"
            RoleArn: !GetAtt PipelineRole.Arn
            Configuration:
              BranchName: !FindInMap
                - EnvMap
                - !Ref Environment
                - branch
              DetectChanges: true
              FullRepositoryId: !Ref RepositoryId
              ConnectionArn: !Ref GithubConnectionArn
            OutputArtifacts:
              - Name: SourceArtifact
            Region: !Ref AWS::Region
            Namespace: SourceVariables
            RunOrder: 1
      - Name: Build
        Actions:
          - Name: Build
            ActionTypeId:
              Category: Build
              Owner: AWS
              Provider: CodeBuild
              Version: "1"
            Configuration:
              ProjectName: !Ref BackendBuildProject
            InputArtifacts:
              - Name: SourceArtifact
            OutputArtifacts:
              - Name: BuildArtifact
            Region: !Ref AWS::Region
            Namespace: BuildVariables
            RunOrder: 1
      - Name: Deploy
        Actions:
          - Name: DeployLambda
            ActionTypeId:
              Category: Deploy
              Owner: AWS
              Provider: CloudFormation
              Version: "1"
            Configuration:
              ActionMode: CREATE_UPDATE
              StackName: !Sub "${AppName}-${Environment}-Lambda"
              Capabilities: CAPABILITY_NAMED_IAM
              TemplatePath: BuildArtifact::template.yaml
              ParameterOverrides: |
                {
                  "Environment": "${Environment}"
                }
            InputArtifacts:
              - Name: BuildArtifact
            RunOrder: 1  
    Tags:
      - Key: Env
        Value: !Ref Environment


 #####

# --- Bucket S3 para almacenar los artefactos de CodeBuild ---
  ArtifactsBucket:
   Type: AWS::S3::Bucket
   Properties:
     BucketName: !Sub rdpost-${Environment}-bucket-functions  

 # CsvImportBucket:
 #   Type: AWS::S3::Bucket
 #   Properties:
 #     BucketName: !Sub "rdpost-${Environment}-s3bucket-csv-import"
 #     AccessControl: Private
 #     VersioningConfiguration:
 #       Status: Enabled

# --- API Gateway ---
  RDPostApi:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Ref AppName
      Description: 'API for a serverless application.'

# API Gateway Resources and Methods
  APIGatewayPostCaseResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RDPostApi.RootResourceId
      PathPart: 'webcase'
      RestApiId: !Ref RDPostApi

  APIGatewaySupportResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !GetAtt RDPostApi.RootResourceId
      PathPart: 'support'
      RestApiId: !Ref RDPostApi    
  
  APIGatewaySupportMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref APIGatewaySupportResource
      RestApiId: !Ref RDPostApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub >-
          arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${SupportLambdaFunction.Arn}/invocations

  APIGatewayPostMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      AuthorizationType: NONE
      HttpMethod: POST
      ResourceId: !Ref APIGatewayPostCaseResource
      RestApiId: !Ref RDPostApi
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub 'arn:${AWS::Partition}:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${PostWebcaseLambdaFunction.Arn}/invocations'


# API Gateway Deployment
  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn:
      - APIGatewayPostMethod
      - APIGatewaySupportMethod
    Properties:
      RestApiId: !Ref RDPostApi
      Description: Initial deployment

# API Gateway Stage
  ApiGatewayStage:
    Type: AWS::ApiGateway::Stage
    Properties:
      StageName: !Ref Environment
      Description: !Sub ${Environment}-Stage
      RestApiId: !Ref RDPostApi
      DeploymentId: !Ref ApiGatewayDeployment 

# --- IAM Role for Lambda ---
  RdPostLambdaExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess 
      Policies:
      - PolicyName: CustomerProfilesPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "profile:CreateProfile"
                - "profile:SearchProfiles"
              Resource: "*" #"arn:aws:customer-profiles:eu-central-1:805246628735:domains/apser-demo"
            - Effect: Allow
              Action:
                - connect:StartOutboundVoiceContact
                - connect:StopContact
                - connect:GetContactAttributes
              Resource: "*"  
            - Effect: Allow
              Action:
                - cases:CreateCase
                - cases:BatchGetField
                - cases:GetTemplate
              Resource: "*"    
      Tags:
        - Key: Environment
          Value: !Ref Environment

  RdPostLambdaExecutionCreateCaseEmailRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AmazonS3FullAccess
        - arn:aws:iam::aws:policy/AmazonSESFullAccess 
      Policies:
      - PolicyName: CustomerProfilesPermissions
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "profile:CreateProfile"
                - "profile:SearchProfiles"
              Resource: "*"  #"arn:aws:customer-profiles:eu-central-1:805246628735:domains/apser-demo"
            - Effect: Allow
              Action: 
                - sts:GetCallerIdentity
              Resource: "*"
            - Effect: Allow
              Action:
                - connect:StartOutboundVoiceContact
                - connect:StopContact
                - connect:GetContactAttributes
              Resource: "*"
            - Effect: Allow
              Action:
                - cases:CreateCase
                - cases:BatchGetField
                - cases:GetTemplate
                - cases:ListFields
              Resource: "*" 
      Tags:
        - Key: Environment
          Value: !Ref Environment


#  LambdaExecutionCreateCaseRedirectedEmailRole:
#    Type: AWS::IAM::Role
#    Properties:
#      AssumeRolePolicyDocument:
#        Version: '2012-10-17'
#        Statement:
#          - Effect: Allow
#            Principal:
#              Service: lambda.amazonaws.com
#            Action:
#              - sts:AssumeRole
#      ManagedPolicyArns:
#        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
#        - arn:aws:iam::aws:policy/AmazonS3FullAccess
#        - arn:aws:iam::aws:policy/AmazonSESFullAccess 
#      Policies:
#      - PolicyName: CustomerProfilesPermissions
#        PolicyDocument:
#          Version: '2012-10-17'
#          Statement:
#            - Effect: Allow
#              Action:
#                - "profile:CreateProfile"
#                - "profile:SearchProfiles"
#              Resource: "*"  #"arn:aws:customer-profiles:eu-central-1:805246628735:domains/apser-demo"
#            - Effect: Allow
#              Action: 
#                - sts:GetCallerIdentity
#              Resource: "*"
#            - Effect: Allow
#              Action:
#                - connect:StartOutboundVoiceContact
#                - connect:StopContact
#                - connect:GetContactAttributes
#              Resource: "*"
#            - Effect: Allow
#              Action:
#                - cases:CreateCase
#                - cases:BatchGetField
#                - cases:GetTemplate
#                - cases:ListFields
#              Resource: "*" 
#      Tags:
#        - Key: Environment
#          Value: !Ref Environment

# --- Lambda Functions ---

# Lambda Function post-webcase
  PostWebcaseLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub rdpost-${Environment}-lambda-post-webcase
      Handler: app.handler
      Runtime: !Ref Runtime
      MemorySize: !Ref MemorySize
      Timeout: !Ref Timeout
      Code:
        S3Bucket:  !Ref ArtifactsBucket #!Sub ${Environment}-bucket-cases 
        S3Key: post_webcase_function.zip
      Role: !GetAtt RdPostLambdaExecutionRole.Arn
      Environment:
        Variables:
          REGION_ID: !Ref AWS::Region
         # S3_BUCKET_NAME: !Ref PostWebcaseBucket

# Lambda Function post-support
  SupportLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub rdpost-${Environment}-lambda-post-support
      Handler: support_app.handler
      Runtime: python3.12
      Timeout: 60
      MemorySize: 256
      Role: !GetAtt RdPostLambdaExecutionRole.Arn
      Code:
        S3Bucket: !Ref ArtifactsBucket #!Sub ${Environment}-bucket-cases
        S3Key: post_support_function.zip
      Environment:
        Variables:
          REGION_ID: !Ref AWS::Region

# Lambda Function create-case-email
  CreateCaseEmailLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub rdpost-${Environment}-lambda-create-case-email
      Handler: app.handler
      Runtime: !Ref Runtime
      MemorySize: !Ref MemorySize
      Timeout: !Ref Timeout
      Code:
        S3Bucket: !Ref ArtifactsBucket #!Sub ${Environment}-bucket-cases
        S3Key: create_case_email_function.zip
      Role: !GetAtt RdPostLambdaExecutionCreateCaseEmailRole.Arn
      Environment:
        Variables:
          REGION_ID: !Ref AWS::Region
          #S3_BUCKET_NAME: !Ref CreateCaseEmailBucket

# Lambda Function create-case-redirected-email
#  CreateCaseRedirectedEmailLambdaFunction:
#    Type: AWS::Lambda::Function
#    Properties:
#      FunctionName: !Sub ${Environment}-create-case-redirected-email
#      Handler: app.handler
#      Runtime: !Ref Runtime
#      MemorySize: !Ref MemorySize
#      Timeout: !Ref Timeout
#      Code:
#        S3Bucket: !Sub ${Environment}-bucket-cases-dev  #!Ref ArtifactsBucket
#        S3Key: create_case_email_function.zip
#      Role: !GetAtt LambdaExecutionCreateCaseRedirectedEmailRole.Arn
#      Environment:
#        Variables:
#         REGION_ID: !Ref AWS::Region
          

# --- Permisos para que API Gateway invoque la Lambda ---
  PermissionForPostWebcaseLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt PostWebcaseLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RDPostApi}/*/POST/webcase'

  PermissionForSupportLambda:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !GetAtt SupportLambdaFunction.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub 'arn:${AWS::Partition}:execute-api:${AWS::Region}:${AWS::AccountId}:${RDPostApi}/*/POST/support'
    
Outputs:
  LambdaFunctionName:
    Description: Nombre de la función Lambda creada.
    Value: !Ref PostWebcaseLambdaFunction

  LambdaFunctionArn:
    Description: ARN de la función Lambda creada.
    Value: !GetAtt PostWebcaseLambdaFunction.Arn

  LambdaExecutionRoleArn:
    Description: ARN del rol de ejecución de la función Lambda.
    Value: !GetAtt RdPostLambdaExecutionRole.Arn

  # Salidas para obtener las URL de los endpoints
  WebCasePostEndpoint:
    Description: Endpoint POST /webcase
    Value: !Sub "https://${RDPostApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/webcase"

  WebCasePostSupportEndpoint:
    Description: 'La URL base para el API Gateway'
    Value: !Sub 'https://${RDPostApi}.execute-api.${AWS::Region}.amazonaws.com/${Environment}/support'
  
